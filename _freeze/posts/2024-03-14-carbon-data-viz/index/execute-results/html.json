{
  "hash": "738b95665df45ef91599a81346e8f0c5",
  "result": {
    "markdown": "---\ntitle: 'Carbon Credits Data Visualization'\ndescription: 'Analyzing the Distribution of Carbon Credits between Countries'\nauthor: \"Vanessa Salgado\"\ndate: \"2024-03-11\"\ncode-fold: true \ntoc: true\noutput:\n    html_document:\n      print_df: paged\n      toc: yes\n      toc_depth: 4\n      toc_float: yes\ndraft: false\n---\n\n\n\n\n\n\n## Background and Motivation\n\nThe Paris Agreement of 2015 was an international standard laid out in order to reduce $CO_2$ emissions. With the Paris Aggreement, national emmisions target and regulations sprung up in order to substantially reduce global greenhouse gas emmission to hold global temperature incear to well below 2 C.\n\nWith these new regulations, businesses were pressured to lower their emmissions. Thuse introducing carbon markets with the promise to turn $CO_2$ into a commodity.\n\nCarbon offsetting is a trading mechanism that allows entities such as governments, individuals, or businesses to compensate for their greenhouse gas emissions by supporting projects that reduce, avoid, or remove emissions elsewhere.\n\nTo Put it simply, carbon offsets involve an entity that emits greenhouse gases into the atmosphere paying for another entity to pollute less. For example, an airline in a developed country that wants to claim it is reducing its emissions can pay for a patch of rainforest to be protected in the Amazon.\n\nThe main research question I want to investigate is whether carbon credits are an effective way to measure carbon offset emissions. Each credit purportedly offsets a metric tonne of CO2 emissions, yet the Berkeley Carbon Trading Project reports that, \"research performed by \\[them\\] and others has found that many, if not most, offset credits traded on the market today do not represent real emissions reductions.\" \\[\\[\\^1\\]\\]\n\n## Goal\n\nCombining the Voluntary Registry Offsets Data with another emissions data would be a helpful way to measure if carbon trading/offsets are accurate in measuring emissions.\n\n### Reserach Questions\n\n1.  The main research question is to see : **Are climate credits an effective way to offset carbon emissions?**\n\nI will create three separate visualizations that all answer the same question: How has the Carbon Market grown over the years per country ? and are they keeping up with the global emission reduction goals\n\nHow does the use of Carbon Credits differ per country?\n\nThe first visualization for a general audience (i.e. without domain expertise) -- this data visualization may be designed to prompt conversation, clearly display findings (without the use of jargon), display findings in an atypical but creative way, and / or may blend both art and science.\n\nThe second visualization to be included in a paper, technical documentation, or report -- this visualization should tell a similar story, but can include much more detail, more data, more domain-specific language, etc.\n\nThe third visualization that you could include in a presentation -- presenting data on slides often requires a slightly different approach -- we ask a lot of an audience (regardless of their familiarity with your domain) when we spend only \\~60 sec on any given slide. It's often imperative to build up your visualizations, slide-by-slide, adding data layers bit-by-bit. Oftentimes, you will only present a subset of data on any given figure. Key takeaways should be clearly highlighted. For this visualization, consider how you would layer on data and what arrows / annotations you'd potentially animate in to make your messaging clear.\n\n## Data\n\n-   *Link to (or otherwise prove the existence of) at least one data set that you plan to use for Assignment #4*\n    -   [Berkeley Voluntary Registry Offsets Database](https://gspp.berkeley.edu/research-and-impact/centers/cepp/projects/berkeley-carbon-trading-project/offsets-database): contains all carbon offset projects, credit issuances, and credit retirements listed globally by four major voluntary offset project registries\n    -   [Data on CO2 and Greenhouse emissions](https://github.com/owid/co2-data) by Our World in Data\n    -   [Raster Data](https://www.naturalearthdata.com/downloads/10m-raster-data/) provided by [Natural Earth](https://www.naturalearthdata.com)\n\n## Data Cleaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n##                          data cleaning & wrangling                       ----\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\ncarbon_offsets_clean <- carbon_offsets %>%\n  janitor::clean_names(case = \"snake\") %>%\n  replace_with_na_all(condition = ~.x %in% c(-99999, \"#REF!\", \"N/a\", \"N/A\", \"NA\")) %>%\n\n  # change char types to ints or doubles\n  mutate(total_credits_issued = as.numeric(gsub(\",\", \"\", total_credits_issued))) %>%\n  mutate(total_credits_retired = as.numeric(gsub(\",\", \"\", total_credits_retired))) %>%\n  mutate(total_credits_remaining = as.numeric(gsub(\",\", \"\", total_credits_remaining))) %>%\n  mutate(total_buffer_pool_deposits = as.numeric(gsub(\",\", \"\", total_buffer_pool_deposits))) %>%\n  mutate(first_year_of_project = as.factor(gsub(\",\", \"\", first_year_of_project))) %>%\n\n  # remove irregular year columns of the structure 2001...127\n  #select_if(~!any(grepl(\"\\\\d\", .)))\n  dplyr::select(!matches(\"\\\\d\"))\n  # select(-grep(pattern = \"^[0-9]{4}\\\\.\\\\.\\\\.[0-9]{3}$\", names(.), value = TRUE)) %>%\n\nyear_of_offsets <- year_of_offsets %>%\n  rename(year_of_offset = year)\n\ncarbon_offsets_clean_df <- carbon_offsets_clean %>%\n  # join with regular year data\n  full_join(year_of_offsets, by = 'project_name',relationship = \"many-to-many\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n##                          importing data                      ----\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\ncarbon_offsets_clean <- read_csv(here(\"data\",\"carbon_offsets_clean.csv\"))\n```\n:::\n\n\nThis graph for the gneral audience is suppose to show the general trend of how Credits Retired and Credits Remaining has changed over time. The Kyoto Protocol in 1997 was the first time that international participation in carbon markets started to become more commonplace. A carbon credit is retired once its benefit has taken place. That means it has been used and the carbon benefit it represents has been claimed by the entity that bought it. We see that there is a bigger proportion of Carbon Credits Retired than Credits Remaining Unused. Meaning the Carbon Credits are working as usual.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n##                    line plot of credits remaining                        ----\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ncredits_plot <- carbon_offsets_clean %>% \n  group_by(year_of_offset) %>% \n  summarize(credits_retired = sum(total_credits_retired, na.rm = TRUE),\n            credits_remaining = sum(total_credits_remaining, na.rm = TRUE))\n\n# Reshape the data for ggplot\ncredits_plot_long <- tidyr::pivot_longer(credits_plot, \n                                          cols = c(credits_retired, credits_remaining),\n                                          names_to = \"type\", \n                                          values_to = \"credits\")\n\nggplot(credits_plot_long, aes(x = year_of_offset, y = credits, color = type)) +\n  geom_line(size=1) +\n  scale_color_manual(values = c(\"credits_retired\" = \"#95C65CFF\", \"credits_remaining\" = \"#4BA68C\")) +\n  scale_y_continuous(labels = scales::comma) +\n  theme_minimal() +\n  annotate(geom = \"text\", x = 1997, y = 50000000,\n    label = \"1997: Kyoto Protocol-Carbon markets started \\nto become more commonplace\",\n    size = 4, color = \"#232226\", hjust = \"inward\") +\n  annotate(geom = \"text\", x = 2015.25, y = 90000000,\n    label = \"2015: Paris Agreement adopted to\\nsubstantially reduce\\nglobal greenhouse gas\\nemissions which\\ncause global warming\n    \",\n    size = 4, color = \"#232226\", hjust = \"left\") +\n  annotate(geom = \"text\", x = 2022, y = 80000000,\n    label = \"2020: U.S.\\nOfficialy\\nLeaves\\nParis\\nClimate\\nAgreement\",\n    size = 4, color = \"#232226\", hjust = \"left\") +\n  geom_vline(xintercept = 1997.5, \n             linetype = \"dashed\") +\n  geom_vline(xintercept = 2020, \n             linetype = \"dashed\") +\n  geom_vline(xintercept = 2015, \n             linetype = \"dashed\") +\n  scale_x_continuous(expand = c(0, 0)) +\n  labs(x = \"Year of Offset\", y = \"Credits\", color = NULL, \n    title = \"<span style='color:#95C65CFF'>Carbon Credits Retired</span> \\nand <span style='color:#4BA68C'>Carbon Credits Remaining</span> \\nOver Time, 1997 - 2023\", \n       subtitle = \"Carbon credits, also known as carbon offsets, are permits that allow the owner to emit a certain\\namount of carbon dioxide or other greenhouse gases. One credit permits the emission of \\none ton of carbon dioxide or the equivalent in other greenhouse gases.\\nCarbon credit: It is the difference between the carbon emissions allowed and actually emitted carbon\") +\n  theme(plot.title = element_markdown(color = \"#232226\", size = 16, face = \"bold\", family = \"merriweather\"),\n        axis.text.x = element_text(angle = 45, hjust = 1), # Adjust angle and font family here\n        legend.position = \"none\", \n        plot.subtitle = element_text(size = 11, face = \"plain\", color = \"#555459\", family = \"karla\"),\n        plot.caption = element_text(face = \"italic\"),\n        axis.title.x = element_text(color = \"#232226\", size = 10, angle = 0, hjust = .5, vjust = 0, face = \"bold\"),\n        axis.title.y = element_text(color = \"#232226\", size = 10, angle = 90, hjust = .5, vjust = .5, face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n## Second Visualization -\n\nThe second visualization to be included in a paper, technical documentation, or report -- this visualization should tell a similar story, but can include much more detail, more data, more domain-specific language, etc.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n##                          lollipop plot of scopes                         ----\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscopes <- carbon_offsets_clean %>% \n  mutate(scope = as.factor(scope)) %>% \n  group_by(scope) %>% \n  summarize(total_credits = sum(total_credits_issued, na.rm = TRUE)) %>% \n  filter(total_credits != 0)\n  # pivot_wider(names_from = scope, values_from = total_credits) %>% \n  # dplyr::select(!\"NA\")\n\nscopes_plot <- ggplot(scopes) + \n  # Add bars to represent the cumulative track lengths\n  # str_wrap(region, 5) wraps the text so each line has at most 5 characters\n  # (but it doesn't break long words!)\n  # geom_col(aes( x = reorder(scope,total_credits),y = total_credits), position = \"dodge2\", show.legend = TRUE, alpha = .9) +\n  ggalt::geom_lollipop(aes( x = reorder(scope,total_credits),y = total_credits), color = \"#9BB655FF\", size = 1.5) +\n  scale_y_continuous(labels = scales::comma, expand = c(0, 0)) +\n  geom_text(aes(x = reorder(scope, total_credits), y = total_credits, label = total_credits),\n            vjust = 0.7, color = \"#232226\", size = 3, hjust = -.1) +  \n  theme_minimal() +\n  labs(title = \"Total Credits Assigned to each Project Scope\",\n       subtitle = \"Scopes refers to the type of projects that aim to reduce emissions\", \n       x = \"Project Scope Category\" ,\n       y = \"Credits Assigned to each Scope\") +\n  coord_flip() +\n  # Annotate custom scale inside plot\n  theme(plot.title = element_markdown(color = \"#232226\", size = 16, , family = \"merriweather\"),\n        axis.text.x = element_text(angle = 45, hjust = 1, family = \"karla\"), # Adjust angle and font family here\n        axis.text.y = element_text(color = \"black\"),\n        legend.position = \"none\", \n        plot.subtitle = element_text(size = 11, face = \"plain\", color = \"#555459\", family = \"karla\"),\n        plot.caption = element_text(face = \"italic\"),\n        axis.title.x = element_text(color = \"black\", size = 10, angle = 0, hjust = .5, vjust = 0, face = \"bold\"),\n        axis.title.y = element_text(color = \"black\", size = 10, angle = 90, hjust = .5, vjust = .5, face = \"bold\"))\n\nscopes_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n# \n\n\n::: {.cell}\n\n```{.r .cell-code}\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n##                    line plot of credits remaining                        ----\n##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n# carbon_offsets_clean_issued <- carbon_offsets_clean %>% \n#   group_by(country) %>%\n#   summarise(total_credits = sum(total_credits_issued, na.rm = TRUE)) \n# \n# \n# top_10_values <- carbon_offsets_clean_issued %>%\n#   top_n(10, total_credits)\n# \n# # If you want to keep only the rows with the top 10 values:\n# filtered_dataframe <- carbon_offsets_clean_issued %>%\n#   filter(total_credits %in% top_10_values$total_credits)\n# \n# filtered_dataframe$label = fontawesome('fa-leaf')\n# \n# ggplot(filtered_dataframe, aes(fill = country, values = total_credits)) +\n#   geom_waffle(n_rows = 20, flip = TRUE,make_proportional = TRUE, color = \"white\") +\n#   geom_text(aes(label=label), family='fontawesome-webfont')\n#   coord_equal() + \n#   paletteer::scale_fill_paletteer_d(\"rcartocolor::Earth\") +\n#   labs(title = \"Which Country has the most Carbon Credits Issued?\",\n#        subtitle = \"This shows the TOP 10 Countries who account for the most credits issued since DATE \",\n#        caption = \"caption\") +\n#   theme_void() +\n#   theme(\n#     legend.position = \"bottom\",\n#     legend.title = element_blank()\n#   )\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}